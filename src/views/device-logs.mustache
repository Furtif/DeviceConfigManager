<!DOCTYPE html="{{locale}}">
    {{> header}}
    <body>
        {{> navbar}}
        <br>
        <h1 align="center" id="header">{{uuid}} {{Device Logs}}</h1>
        <br>
        <div style="width:90%; margin-left:calc(5%);">
            <a href="/api/log/delete/{{uuid}}" role="button" style="float: right;" class="btn btn-danger" onclick="return confirm('{{Are you sure you want to delete all logs for}} {{uuid}}?');">{{Delete All}}</a>
            <a href="#" role="button" style="float: right;" class="btn btn-primary" onclick="exportLogs()">{{Export All}}</a>
            <br><br>
            <table id="table" class="table table-{{style}} table-sm table-striped table-bordered table-hover nowrap" style="position: center; width:100%">
                <thead class="thead-dark">
                <tr>
                    <th>{{Date}}</th>
                    <th>{{UUID}}</th>
                    <th>{{Message}}</th>
                </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </body>
</html>

<script>
    if ("{{style}}" === 'dark') {
        $('body').css('background-color', 'rgb(33, 37, 41)');
        $('body').css('color', 'rgb(255, 255, 255)');
        //$('#header').css('color', 'white');
        //$('#message').css('color', 'white');
    }
    $(document).ready(function() {
        const table = $('#table').DataTable( {
            "ajax": {
                "url": "/api/logs/{{uuid}}",
                "dataSrc": "data.logs",
                "async": true
            },
            "paging":   true,
            "lengthMenu": [[25, 50, 100, -1], [25, 50, 100, "All"]],
            "pageLength": 100,
            "columns": [
                { "data": "date" },
                { "data": "uuid" },
                { "data": "message" }
            ],
            "info":     true,
            "order": [[ 0, "desc" ]],
            "search.caseInsensitive": true,
            "columnDefs": [ {
                "targets": [2],
                "orderable": false
            }]
        });
        $('#table').on( 'draw.dt', function () {
            setTimeout( function () {
                table.ajax.reload(null, false);
            }, 5000);
        } );
    });

    function exportLogs() {
        $.ajax({
            url: '/api/log/export/{{uuid}}',
            type: 'GET',
            success: function(data, textStatus, jqXHR) {
                //console.log("RECEIVED:", data);
                downloader(data, 'html/text', '{{uuid}}.log');
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error("ERROR:", textStatus);
                console.error("ERROR THROWN:", errorThrown);
            }
        });
    }

    function downloader(data, type, name) {
        let blob = new Blob([data], {type});
        let url = window.URL.createObjectURL(blob);
        downloadURI(url, name);
        window.URL.revokeObjectURL(url);
    }

    function downloadURI(uri, name) {
        let link = document.createElement("a");
        link.download = name;
        link.href = uri;
        link.click();
    }
</script>
